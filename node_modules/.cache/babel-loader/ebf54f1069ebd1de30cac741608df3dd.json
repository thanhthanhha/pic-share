{"ast":null,"code":"var _jsxFileName = \"D:\\\\Git\\\\pic\\\\pic-share\\\\src\\\\containers\\\\browse.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useContext } from 'react';\nimport { Card } from '../component';\nimport useContent from '../hook/use-content';\nimport * as ROUTES from '../config/router';\nimport Parser from 'html-react-parser';\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function BrowseContainer(_ref) {\n  _s();\n\n  let {\n    children,\n    ...restProps\n  } = _ref;\n  const location = useLocation();\n  const history = useNavigate();\n  const content = useContent('storylist');\n\n  const StoryRedirect = (event, id) => {\n    event.preventDefault();\n    history(`/story/${id}`);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card.Group, {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(Card.Entities, {\n        children: content.map(slideItem => {\n          console.log(slideItem);\n          return /*#__PURE__*/_jsxDEV(Card.Item, {\n            children: /*#__PURE__*/_jsxDEV(Card.Meta, {\n              onClick: e => StoryRedirect(e, slideItem.id),\n              children: [/*#__PURE__*/_jsxDEV(Card.SubTitle, {\n                children: slideItem.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 28,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                children: Parser(slideItem.summary)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 29,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 37\n            }, this)\n          }, `${slideItem.id}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 33\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n}\n\n_s(BrowseContainer, \"1HmCJy4I3t3wgundFk19VS2jYTU=\", false, function () {\n  return [useLocation, useNavigate, useContent];\n});\n\n_c = BrowseContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"BrowseContainer\");","map":{"version":3,"names":["React","useState","useEffect","useContext","Card","useContent","ROUTES","Parser","useLocation","useNavigate","BrowseContainer","children","restProps","location","history","content","StoryRedirect","event","id","preventDefault","map","slideItem","console","log","e","name","summary"],"sources":["D:/Git/pic/pic-share/src/containers/browse.js"],"sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\r\nimport { Card } from '../component';\r\nimport useContent from '../hook/use-content';\r\nimport * as ROUTES from '../config/router';\r\nimport Parser from 'html-react-parser';\r\nimport { useLocation, useNavigate } from \"react-router-dom\";\r\n\r\nexport default function BrowseContainer({children, ...restProps}) {\r\n    \r\n    const location = useLocation();\r\n    const history = useNavigate();\r\n\r\n    const content = useContent('storylist');\r\n    const StoryRedirect = (event,id) => {\r\n        event.preventDefault();\r\n        history(`/story/${id}`);\r\n    }\r\n\r\n\r\n    return (\r\n        <Card.Group>\r\n            <Card>\r\n                <Card.Entities>\r\n                    {content.map((slideItem) => {\r\n                        console.log(slideItem);\r\n                        return (<Card.Item key={`${slideItem.id}`}>\r\n                                    <Card.Meta onClick={(e) => StoryRedirect(e,slideItem.id)}>\r\n                                        <Card.SubTitle>{slideItem.name}</Card.SubTitle>\r\n                                        <Card.Text>{Parser(slideItem.summary)}</Card.Text>\r\n                                    </Card.Meta>\r\n                                </Card.Item>\r\n                                )\r\n                    })}\r\n                </Card.Entities>\r\n            </Card>\r\n   \r\n        </Card.Group>\r\n    )\r\n}\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,UAArC,QAAuD,OAAvD;AACA,SAASC,IAAT,QAAqB,cAArB;AACA,OAAOC,UAAP,MAAuB,qBAAvB;AACA,OAAO,KAAKC,MAAZ,MAAwB,kBAAxB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,kBAAzC;;AAEA,eAAe,SAASC,eAAT,OAAmD;EAAA;;EAAA,IAA1B;IAACC,QAAD;IAAW,GAAGC;EAAd,CAA0B;EAE9D,MAAMC,QAAQ,GAAGL,WAAW,EAA5B;EACA,MAAMM,OAAO,GAAGL,WAAW,EAA3B;EAEA,MAAMM,OAAO,GAAGV,UAAU,CAAC,WAAD,CAA1B;;EACA,MAAMW,aAAa,GAAG,CAACC,KAAD,EAAOC,EAAP,KAAc;IAChCD,KAAK,CAACE,cAAN;IACAL,OAAO,CAAE,UAASI,EAAG,EAAd,CAAP;EACH,CAHD;;EAMA,oBACI,QAAC,IAAD,CAAM,KAAN;IAAA,uBACI,QAAC,IAAD;MAAA,uBACI,QAAC,IAAD,CAAM,QAAN;QAAA,UACKH,OAAO,CAACK,GAAR,CAAaC,SAAD,IAAe;UACxBC,OAAO,CAACC,GAAR,CAAYF,SAAZ;UACA,oBAAQ,QAAC,IAAD,CAAM,IAAN;YAAA,uBACI,QAAC,IAAD,CAAM,IAAN;cAAW,OAAO,EAAGG,CAAD,IAAOR,aAAa,CAACQ,CAAD,EAAGH,SAAS,CAACH,EAAb,CAAxC;cAAA,wBACI,QAAC,IAAD,CAAM,QAAN;gBAAA,UAAgBG,SAAS,CAACI;cAA1B;gBAAA;gBAAA;gBAAA;cAAA,QADJ,eAEI,QAAC,IAAD,CAAM,IAAN;gBAAA,UAAYlB,MAAM,CAACc,SAAS,CAACK,OAAX;cAAlB;gBAAA;gBAAA;gBAAA;cAAA,QAFJ;YAAA;cAAA;cAAA;cAAA;YAAA;UADJ,GAAiB,GAAEL,SAAS,CAACH,EAAG,EAAhC;YAAA;YAAA;YAAA;UAAA,QAAR;QAOH,CATA;MADL;QAAA;QAAA;QAAA;MAAA;IADJ;MAAA;MAAA;MAAA;IAAA;EADJ;IAAA;IAAA;IAAA;EAAA,QADJ;AAmBH;;GA/BuBR,e;UAEHF,W,EACDC,W,EAEAJ,U;;;KALIK,e"},"metadata":{},"sourceType":"module"}