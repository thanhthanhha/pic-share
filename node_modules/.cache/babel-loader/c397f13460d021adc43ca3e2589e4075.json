{"ast":null,"code":"var _jsxFileName = \"D:\\\\Git\\\\pic\\\\pic-share\\\\src\\\\helpers\\\\useAuth.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { createContext, useContext, useEffect, useMemo } from 'react';\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nrequire('dotenv').config();\n\nconst AuthContext = /*#__PURE__*/createContext(null);\nexport function AuthProvider(_ref) {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [user, setUser] = useState();\n  const [error, setError] = useState();\n  const [loading, setLoading] = useState(false);\n  const [isLogin, setisLogin] = useState(false);\n  const location = useLocation();\n  const history = useNavigate();\n  useEffect(() => {\n    if (error) setError(null);\n  }, [location.pathname]);\n  useEffect(() => {\n    async function verifyLogin() {\n      localStorage.getItem('token');\n      let res = await axios.get(`${BACKEND_URI}/welcome`, {\n        headers: {\n          'x-access-token': token,\n          'Accept': 'application/json',\n          'Content-Type': '*/*',\n          'User-Agent': 'Client',\n          'Connection': 'keep-alive',\n          'Host': 'localhost'\n        }\n      }).then(res => {\n        if (res.username && res.token) {\n          setUser({ ...res\n          });\n        }\n\n        localStorage.setItem('token', user.token);\n        setisLogin(true);\n      }).catch(error => {\n        setError(error);\n        localStorage.removeItem('token');\n        setUser(null);\n        setisLogin(false);\n      });\n    }\n\n    verifyLogin();\n  });\n\n  const signUp = async (email, username, password) => {\n    setLoading(true);\n    let res = await axios.post(`${BACKEND_URI}/register`, {\n      \"username\": username,\n      \"email\": email,\n      \"password\": password\n    }, {\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': '*/*',\n        'User-Agent': 'Client',\n        'Connection': 'keep-alive',\n        'Host': 'localhost'\n      }\n    }).then(res => {\n      if (res.username && res.token) {\n        setUser({ ...res\n        });\n      }\n\n      localStorage.setItem('token', user.token);\n      setisLogin(true);\n    }).catch(error => {\n      setError(error);\n      setUser(null);\n      setisLogin(false);\n    }).finally(() => setLoading(false));\n  };\n\n  const login = async (username, password) => {\n    setLoading(true);\n    let res = await axios.post(`${BACKEND_URI}/login`, {\n      \"username\": username,\n      \"password\": password\n    }, {\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': '*/*',\n        'User-Agent': 'Client',\n        'Connection': 'keep-alive',\n        'Host': 'localhost'\n      }\n    }).then(res => {\n      if (res.username && res.token) {\n        setUser({ ...res\n        });\n      }\n\n      localStorage.setItem('token', user.token);\n      setisLogin(true);\n      history(\"/browse\");\n    }).catch(error => {\n      setError(error);\n      setUser(null);\n      setisLogin(false);\n    }).finally(() => setLoading(false));\n  };\n\n  const memoedVal = useMemo(() => ({\n    user,\n    error,\n    loading,\n    isLogin,\n    login,\n    signUp\n  }), [user, loading, error]);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: memoedVal,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 126,\n    columnNumber: 9\n  }, this);\n}\n\n_s(AuthProvider, \"lRAuxNZEyruk5ECikqWQdycBPow=\", false, function () {\n  return [useLocation, useNavigate];\n});\n\n_c = AuthProvider;\nexport default function useAuth() {\n  _s2();\n\n  return useContext(AuthContext);\n}\n\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["createContext","useContext","useEffect","useMemo","useLocation","useNavigate","require","config","AuthContext","AuthProvider","children","user","setUser","useState","error","setError","loading","setLoading","isLogin","setisLogin","location","history","pathname","verifyLogin","localStorage","getItem","res","axios","get","BACKEND_URI","headers","token","then","username","setItem","catch","removeItem","signUp","email","password","post","finally","login","memoedVal","useAuth"],"sources":["D:/Git/pic/pic-share/src/helpers/useAuth.js"],"sourcesContent":["import { createContext, useContext, useEffect, useMemo } from 'react';\r\nimport { useLocation, useNavigate } from \"react-router-dom\";\r\n\r\nrequire('dotenv').config();\r\n\r\nconst AuthContext = createContext(null);\r\n\r\nexport function AuthProvider({ children }) {\r\n    const [user, setUser] = useState();\r\n    const [error, setError] = useState();\r\n    const [loading, setLoading] = useState(false);\r\n    const [isLogin, setisLogin] = useState(false);\r\n\r\n    const location = useLocation();\r\n    const history = useNavigate();\r\n\r\n    useEffect(() => {\r\n        if (error) setError(null);\r\n      }, [location.pathname]);\r\n\r\n    useEffect(() => {\r\n        async function verifyLogin() {\r\n            localStorage.getItem('token');\r\n            let res = await axios.get(`${BACKEND_URI}/welcome`,{\r\n                headers: {\r\n                    'x-access-token' : token,\r\n                    'Accept' : 'application/json',\r\n                    'Content-Type' : '*/*',\r\n                    'User-Agent' : 'Client',\r\n                    'Connection' : 'keep-alive',\r\n                    'Host' : 'localhost'\r\n                }\r\n            })\r\n            .then(res => {\r\n                if (res.username && res.token) {\r\n                    setUser({...res}); \r\n                }\r\n                localStorage.setItem('token', user.token);\r\n                setisLogin(true);\r\n            })\r\n            .catch((error) => {\r\n                setError(error);\r\n                localStorage.removeItem('token');\r\n                setUser(null);\r\n                setisLogin(false);\r\n            })\r\n        }\r\n\r\n        verifyLogin();\r\n    })\r\n\r\n    const signUp = async (email, username, password) => {\r\n        setLoading(true);\r\n\r\n        let res = await axios.post(`${BACKEND_URI}/register`, {\r\n                \"username\": username,\r\n                \"email\" : email,\r\n                \"password\": password\r\n        },{\r\n            headers: {\r\n                'Accept' : 'application/json',\r\n                'Content-Type' : '*/*',\r\n                'User-Agent' : 'Client',\r\n                'Connection' : 'keep-alive',\r\n                'Host' : 'localhost'\r\n            }\r\n        })\r\n        .then((res) => {\r\n            if (res.username && res.token) {\r\n                setUser({...res}); \r\n            }\r\n            localStorage.setItem('token', user.token);\r\n            setisLogin(true);\r\n        })\r\n        .catch((error) => {\r\n            setError(error);\r\n            setUser(null);\r\n            setisLogin(false);\r\n        })\r\n        .finally(() => setLoading(false));\r\n    }\r\n\r\n    const login = async (username, password) => {\r\n        setLoading(true);\r\n\r\n        let res = await axios.post(`${BACKEND_URI}/login`, {\r\n                \"username\": username,\r\n                \"password\": password\r\n        },{\r\n            headers: {\r\n                'Accept' : 'application/json',\r\n                'Content-Type' : '*/*',\r\n                'User-Agent' : 'Client',\r\n                'Connection' : 'keep-alive',\r\n                'Host' : 'localhost'\r\n            }\r\n        })\r\n        .then((res) => {\r\n            if (res.username && res.token) {\r\n                setUser({...res}); \r\n            }\r\n            localStorage.setItem('token', user.token);\r\n            setisLogin(true);\r\n            history(\"/browse\");\r\n        })\r\n        .catch((error) => {\r\n            setError(error);\r\n            setUser(null);\r\n            setisLogin(false);\r\n        })\r\n        .finally(() => setLoading(false));\r\n    }\r\n\r\n\r\n    const memoedVal = useMemo(() => ({\r\n        user,\r\n        error,\r\n        loading,\r\n        isLogin,\r\n        login,\r\n        signUp\r\n    }),\r\n    [user, loading, error])\r\n\r\n    return (\r\n        <AuthContext.Provider value = {memoedVal}>\r\n            {children}\r\n        </AuthContext.Provider>\r\n    )\r\n}\r\n\r\nexport default function useAuth() {\r\n    return useContext(AuthContext);\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}